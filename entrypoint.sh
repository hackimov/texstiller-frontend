#!/bin/sh

# Smart Frontend Entrypoint
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–∑ .env —Ñ–∞–π–ª–∞

set -e

echo "üöÄ Starting Frontend Container..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
fi

echo "Environment: ${NODE_ENV:-development}"
echo "Mode: ${FRONTEND_MODE:-auto}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    if [ ! -d "node_modules" ] || [ ! -f "node_modules/.installed" ]; then
        echo "üì¶ Installing dependencies..."
        npm ci --legacy-peer-deps || npm install --legacy-peer-deps
        touch node_modules/.installed
        echo "‚úÖ Dependencies installed"
    else
        echo "‚úÖ Dependencies already installed"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    echo "üî® Building project..."
    npm run build
    echo "‚úÖ Build completed"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
serve_static() {
    echo "üåê Starting static server..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º serve –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if ! command -v serve > /dev/null 2>&1; then
        echo "üì¶ Installing serve..."
        npm install -g serve
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä
    serve -s dist -l 5173 -n
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ dev —Å–µ—Ä–≤–µ—Ä–∞
start_dev() {
    echo "üî• Starting development server..."
    npm run dev -- --host 0.0.0.0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
install_dependencies

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
MODE=${FRONTEND_MODE:-auto}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –ø–æ NODE_ENV
if [ "$MODE" = "auto" ]; then
    if [ "$NODE_ENV" = "production" ]; then
        MODE="build"
    else
        MODE="dev"
    fi
fi

echo "üéØ Selected mode: $MODE"

# –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
case "$MODE" in
    "dev"|"development")
        start_dev
        ;;
    "build"|"production")
        build_project
        serve_static
        ;;
    "serve")
        # –ï—Å–ª–∏ –µ—Å—Ç—å –±–∏–ª–¥, –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä
        if [ -d "dist" ]; then
            serve_static
        else
            echo "üì¶ No build found, building first..."
            build_project
            serve_static
        fi
        ;;
    *)
        echo "‚ùå Unknown mode: $MODE"
        echo "Available modes: dev, build, serve, auto"
        exit 1
        ;;
esac
