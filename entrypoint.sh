#!/bin/sh

# Smart Frontend Entrypoint
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–∑ .env —Ñ–∞–π–ª–∞

set -e

echo "üöÄ Starting Frontend Container..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
fi

echo "Environment: ${NODE_ENV:-development}"
echo "Mode: ${FRONTEND_MODE:-auto}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo "üìã Diagnostic information:"
    echo "Working directory: $(pwd)"
    echo "User: $(whoami)"
    echo "Node modules exists: $(test -d node_modules && echo 'yes' || echo 'no')"
    echo "Vite exists: $(test -f node_modules/.bin/vite && echo 'yes' || echo 'no')"
    echo "Installed marker: $(test -f node_modules/.installed && echo 'yes' || echo 'no')"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if [ ! -f "node_modules/.bin/vite" ] || [ ! -f "node_modules/.installed" ]; then
        echo "üì¶ Installing dependencies..."
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if [ "$NODE_ENV" = "production" ]; then
            echo "Installing production + dev dependencies for build..."
            # –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –Ω—É–∂–Ω—ã dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏
            npm install --legacy-peer-deps
        else
            echo "Installing all dependencies..."
            npm install --legacy-peer-deps
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if [ -f "node_modules/.bin/vite" ]; then
            touch node_modules/.installed
            echo "‚úÖ Dependencies installed successfully"
        else
            echo "‚ùå Dependencies installation failed - vite not found"
            echo "üìã Checking node_modules structure:"
            ls -la node_modules/.bin/ 2>/dev/null || echo "No .bin directory found"
            echo "üìã Checking package.json scripts:"
            cat package.json | grep -A 5 '"scripts"' || echo "No scripts found"
            echo "‚è≥ Waiting 30 seconds before retry..."
            sleep 30
            exit 1
        fi
    else
        echo "‚úÖ Dependencies already installed"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    echo "üî® Building project..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json –∏ scripts
    if [ ! -f "package.json" ]; then
        echo "‚ùå package.json not found"
        exit 1
    fi
    
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo "üìã Checking build environment..."
    echo "Working directory: $(pwd)"
    echo "Node version: $(node --version)"
    echo "NPM version: $(npm --version)"
    echo "Package.json exists: $(test -f package.json && echo 'yes' || echo 'no')"
    echo "Node modules exists: $(test -d node_modules && echo 'yes' || echo 'no')"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ vite
    if [ -f "node_modules/.bin/vite" ]; then
        echo "‚úÖ Vite found at node_modules/.bin/vite"
    else
        echo "‚ùå Vite not found in node_modules/.bin/"
        echo "üìã Listing node_modules/.bin/:"
        ls -la node_modules/.bin/ | head -10
    fi
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º npm run build (–∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π vite)
    echo "üöÄ Running npm run build..."
    if npm run build; then
        echo "‚úÖ Build completed"
    else
        echo "‚ùå Build failed"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
serve_static() {
    echo "üåê Starting static server..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º serve –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if ! command -v serve > /dev/null 2>&1; then
        echo "üì¶ Installing serve..."
        npm install -g serve
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä
    serve -s dist -l 5173 -n
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ dev —Å–µ—Ä–≤–µ—Ä–∞
start_dev() {
    echo "üî• Starting development server..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ dev —Å–∫—Ä–∏–ø—Ç–∞
    if npm run dev -- --host 0.0.0.0; then
        echo "‚úÖ Dev server started"
    else
        echo "‚ùå Failed to start dev server"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
install_dependencies

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
MODE=${FRONTEND_MODE:-auto}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –ø–æ NODE_ENV
if [ "$MODE" = "auto" ]; then
    if [ "$NODE_ENV" = "production" ]; then
        MODE="build"
    else
        MODE="dev"
    fi
fi

echo "üéØ Selected mode: $MODE"

# –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
case "$MODE" in
    "dev"|"development")
        start_dev
        ;;
    "build"|"production")
        build_project
        serve_static
        ;;
    "serve")
        # –ï—Å–ª–∏ –µ—Å—Ç—å –±–∏–ª–¥, –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä
        if [ -d "dist" ]; then
            serve_static
        else
            echo "üì¶ No build found, building first..."
            build_project
            serve_static
        fi
        ;;
    *)
        echo "‚ùå Unknown mode: $MODE"
        echo "Available modes: dev, build, serve, auto"
        exit 1
        ;;
esac
